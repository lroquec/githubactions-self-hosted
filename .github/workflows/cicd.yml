name: my python flask app
on: 
#  push: 
#    branches: 
#      - main
  workflow_dispatch:
env:
  docker_pass: ${{ secrets.DOCKER_PASS }}
  docker_user: ${{ secrets.DOCKER_USERNAME }}
  app_name: ${{ vars.IMAGE_NAME }}
jobs:
   avoid_redundancy:
     runs-on: ubuntu-latest ##ubuntu-20.04
     steps:
       - name: Cancel Workflow Action
         uses: styfle/cancel-workflow-action@0.12.1
         with:
           access_token: ${{ github.token }}

   flake8-lint:
     runs-on: ubuntu-latest
     name: Lint
     steps:
       - name: Check out source repository
         uses: actions/checkout@v4
       - name: Set up Python environment
         uses: actions/setup-python@v4
         with:
           python-version: "3.11"
       - name: flake8 Lint
         uses: py-actions/flake8@v2

   sonarcloud:
     needs: [flake8-lint]
     runs-on: ubuntu-latest
     name: review code
     steps:
       - uses: actions/checkout@v4
         with:
           # Disabling shallow clone is recommended for improving relevancy of reporting
           fetch-depth: 0
       - name: SonarCloud Scan
         uses: sonarsource/sonarcloud-github-action@v3.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
         env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

   build:
     needs: [sonarcloud]
     runs-on: ubuntu-latest
     steps:
       - name: Set up QEMU
         uses: docker/setup-qemu-action@v3
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3
       - name: login to docker hub
         uses: docker/login-action@v3
         with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASS }}
       - name: build and push image
         uses: docker/build-push-action@v6
         with:
           push: true
           tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest

   trivy-image-check:
     needs: [build]
     runs-on: ubuntu-latest
     steps:
       - name: Run Trivy vulnerability scanner
         uses: aquasecurity/trivy-action@0.28.0
         with:
           image-ref: 'docker.io/${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest'
           output: trivy-report.sarif
           format: sarif
           exit-code: '1'
           ignore-unfixed: true
           vuln-type: 'os,library'
           severity: 'CRITICAL,HIGH'
       - name: Upload Vulnerability Scan Results
         uses: actions/upload-artifact@v4
         with:
           name: trivy-report
           path: trivy-report.sarif
           retention-days: 1